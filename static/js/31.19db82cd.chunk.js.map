{"version":3,"sources":["features/signIn/SignIn.tsx","features/signIn/SignIn.module.scss"],"names":["TextField","lazy","centerVH","styles","submitBtn","wrapper","SignIn","signIn","useAuth","history","useHistory","validation","email","Yup","required","password","min","matches","className","fallback","initialValues","validationSchema","onSubmit","values","actions","then","res","setSubmitting","push","catch","error","alert","code","message","props","name","type","label","disabled","isSubmitting","module","exports"],"mappings":"+GAAA,2EAQMA,EAAYC,gBAAK,kBAAM,iCAErBC,EAAiCC,IAAjCD,SAAUE,EAAuBD,IAAvBC,UAAWC,EAAYF,IAAZE,QAuDdC,UAhDA,WACb,IAAQC,EAAWC,cAAXD,OACFE,EAAUC,cAEVC,EAAkB,CACtBC,MAAOC,MACJD,MAAM,yBACNE,SAAS,YACZC,SAAUF,MACPG,IAAI,EAAG,sDACPC,QAAQ,iBAAkB,iDAC1BH,SAAS,aAId,OAAO,qBAAKI,UAAWb,EAAhB,SACL,eAAC,WAAD,CAAUc,SAAU,6CAApB,UACE,yCAEA,cAAC,IAAD,CACEC,cAAe,CACbR,MAAO,GACPG,SAAU,IAEZM,iBAAkBR,IAAWF,GAC7BW,SAAU,SAACC,EAAQC,GACjBjB,EAAOgB,EAAOX,MAAOW,EAAOR,UACzBU,MAAK,SAACC,GACLF,EAAQG,eAAc,GACtBlB,EAAQmB,KAAK,QAEdC,OAAM,SAACC,GACNC,MAAM,GAAD,OAAID,EAAME,KAAV,YAAkBF,EAAMG,cAbrC,SAiBG,SAACC,GAAD,OACC,eAAC,IAAD,WACE,cAAClC,EAAD,CAAWmC,KAAK,QAAQC,KAAK,QAAQC,MAAM,UAC3C,cAACrC,EAAD,CAAWmC,KAAK,WAAWC,KAAK,WAAWC,MAAM,aACjD,wBAAQD,KAAK,SAASlB,UAAWd,EAAWkC,SAAUJ,EAAMK,aAA5D,SAA0E,sBAAMrB,UAAWhB,EAAjB,oC,oBCxDtFsC,EAAOC,QAAU,CAAC,QAAU,wBAAwB,UAAY,0BAA0B,SAAW","file":"static/js/31.19db82cd.chunk.js","sourcesContent":["import { lazy, Suspense } from 'react';\r\nimport { Formik, Form, FormikProps } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../../store/AuthContext';\r\n\r\nimport styles from './SignIn.module.scss'\r\n\r\nconst TextField = lazy(() => import('../../commonComponents/formFields/TextField'));\r\n\r\nconst { centerVH, submitBtn, wrapper } = styles;\r\n\r\ninterface Values {\r\n  password: string;\r\n  email: string;\r\n}\r\n\r\nconst SignIn = () => {\r\n  const { signIn } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const validation: any = {\r\n    email: Yup.string()\r\n      .email('Invalid email address')\r\n      .required('Required'),\r\n    password: Yup.string()\r\n      .min(8, 'Password is too short - should be 8 chars minimum.')\r\n      .matches(/^[a-zA-Z0-9]*$/, 'Password can contain only letters and numbers')\r\n      .required('Required'),\r\n  }\r\n\r\n\r\n  return <div className={wrapper}>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <h1>Sign In</h1>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={Yup.object(validation)}\r\n        onSubmit={(values, actions) => {\r\n          signIn(values.email, values.password)\r\n            .then((res) => {\r\n              actions.setSubmitting(false);\r\n              history.push('/');\r\n            })\r\n            .catch((error) => {\r\n              alert(`${error.code} ${error.message}`);\r\n            });\r\n        }}\r\n      >\r\n        {(props: FormikProps<Values>) => (\r\n          <Form>\r\n            <TextField name=\"email\" type=\"email\" label=\"Email\" />\r\n            <TextField name=\"password\" type=\"password\" label=\"Password\" />\r\n            <button type=\"submit\" className={submitBtn} disabled={props.isSubmitting}><span className={centerVH}>Sign In</span></button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Suspense>\r\n  </div>\r\n}\r\n\r\nexport default SignIn;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SignIn_wrapper__CV4QX\",\"submitBtn\":\"SignIn_submitBtn__3xmMe\",\"centerVH\":\"SignIn_centerVH__16jeD\"};"],"sourceRoot":""}