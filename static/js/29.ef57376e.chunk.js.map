{"version":3,"sources":["features/catalog/Filters.module.scss","assets/svg/OptionsIcon.tsx","features/catalog/Filters.tsx"],"names":["module","exports","OptionsIcon","id","xmlns","viewBox","width","height","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","activeFiltersList","styles","activeFilter","btnFiltersPanel","content","productType","removeBtn","wrapper","Filters","dispatch","useAppDispatch","filters","useAppSelector","selectFilters","searchQuery","useLocation","search","className","onClick","setShowFilterOptions","Object","entries","map","filter","to","pathname","categoryFilter","setFilters","value","CloseIcon","strokeColor"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,gBAAkB,iCAAiC,kBAAoB,mCAAmC,aAAe,8BAA8B,QAAU,yBAAyB,UAAY,2BAA2B,YAAc,+B,0FCWrRC,EARiC,WAC9C,OACE,qBAAKC,GAAG,YAAYC,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAAKC,KAAK,OAAOC,OAAO,eAAeC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAA7L,SACE,sBAAMC,EAAE,kF,kBCGNC,EAA+FC,IAA/FD,kBAAmBE,EAA4ED,IAA5EC,aAAcC,EAA8DF,IAA9DE,gBAAiBC,EAA6CH,IAA7CG,QAASC,EAAoCJ,IAApCI,YAAaC,EAAuBL,IAAvBK,UAAWC,EAAYN,IAAZM,QAuC5EC,UArCf,WACE,IAAMC,EAAWC,cACXC,EAAUC,YAAeC,KACzBC,EAAcC,cAAcC,OAElC,OACE,wBAAOC,UAAWV,EAAlB,UAEE,oBAAIU,UAAWZ,EAAf,oBACA,yBAAQY,UAAWd,EAAiBe,QAAS,kBAAMT,EAASU,gBAA5D,UACE,cAAC,EAAD,IACA,6CAGF,oBAAIF,UAAWjB,EAAf,SACGoB,OAAOC,QAAQV,GAASW,KAAI,SAAAC,GAC3B,OAAQA,EAAO,IACb,oBAAIN,UAAWf,EAAf,SACE,eAAC,IAAD,CAAMsB,GAAI,CACRC,SAAS,GAAD,OAAmB,mBAAdF,EAAO,GAA0B,4BAA8BZ,EAAQe,gBACpFV,OAAO,GAAD,OAAmB,iBAAdO,EAAO,GAAwB,KAAOT,IAEjDI,QAAS,kBAAMT,EAASkB,YAAW,CAAEJ,OAAQA,EAAO,GAAIK,MAAO,OAJjE,UAME,sBAAMX,UAAWb,EAAjB,SAAyC,mBAAdmB,EAAO,GAA0BA,EAAO,GAAKA,EAAO,KAC/E,wBAAQN,UAAWX,EAAnB,SACE,cAACuB,EAAA,EAAD,CAAW/B,YAAa,EAAGgC,YAAY,kBATXP,EAAO","file":"static/js/29.ef57376e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filters_wrapper__1RpX4\",\"btnFiltersPanel\":\"Filters_btnFiltersPanel__3o2fj\",\"activeFiltersList\":\"Filters_activeFiltersList__1DYMv\",\"activeFilter\":\"Filters_activeFilter__33bjA\",\"content\":\"Filters_content__1vkb4\",\"removeBtn\":\"Filters_removeBtn__1ojkg\",\"productType\":\"Filters_productType__2UBfC\"};","export interface OptionsIconProps {\r\n\r\n}\r\n\r\nconst OptionsIcon: React.FC<OptionsIconProps> = () => {\r\n  return (\r\n    <svg id=\"i-options\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentcolor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\">\r\n      <path d=\"M28 6 L4 6 M28 16 L4 16 M28 26 L4 26 M24 3 L24 9 M8 13 L8 19 M20 23 L20 29\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default OptionsIcon;","import { Link, useLocation } from 'react-router-dom';\r\nimport { useAppSelector, useAppDispatch } from '../../helpers/types/hooks';\r\n\r\nimport { setFilters, setShowFilterOptions } from './catalogSlice';\r\nimport { selectFilters } from './catalogSlice';\r\n\r\nimport CloseIcon from '../../assets/svg/CloseIcon';\r\nimport OptionsIcon from '../../assets/svg/OptionsIcon';\r\nimport styles from './Filters.module.scss';\r\n\r\nconst { activeFiltersList, activeFilter, btnFiltersPanel, content, productType, removeBtn, wrapper } = styles;\r\n\r\nfunction Filters() {\r\n  const dispatch = useAppDispatch();\r\n  const filters = useAppSelector(selectFilters);\r\n  const searchQuery = useLocation().search;\r\n\r\n  return (\r\n    <aside className={wrapper} >\r\n\r\n      <h2 className={productType}>Ebooki</h2>\r\n      <button className={btnFiltersPanel} onClick={() => dispatch(setShowFilterOptions())}>\r\n        <OptionsIcon />\r\n        <span>Filtry</span>\r\n      </button>\r\n\r\n      <ul className={activeFiltersList}>\r\n        {Object.entries(filters).map(filter => {\r\n          return (filter[1] &&\r\n            <li className={activeFilter} key={filter[0]} >\r\n              <Link to={{\r\n                pathname: `${filter[0] === 'categoryFilter' ? \"/catalog/Wszystkie Ebooki\" : filters.categoryFilter}`,\r\n                search: `${filter[0] === 'searchFilter' ? null : searchQuery}`\r\n              }}\r\n                onClick={() => dispatch(setFilters({ filter: filter[0], value: '' }))}>\r\n\r\n                <span className={content}>{filter[0] === 'categoryFilter' ? filter[1] : filter[0]}</span>\r\n                <button className={removeBtn}>\r\n                  <CloseIcon strokeWidth={3} strokeColor='#CF2942' />\r\n                </button>\r\n              </Link>\r\n            </li>)\r\n        })}\r\n      </ul>\r\n\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Filters;"],"sourceRoot":""}